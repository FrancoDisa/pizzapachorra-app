services:
  # Base de datos PostgreSQL
  database:
    image: postgres:16-alpine
    container_name: pizzapachorra_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: pizzapachorra
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pizzapachorra2025
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=es_ES.UTF-8 --lc-ctype=es_ES.UTF-8'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./database/migrations:/docker-entrypoint-initdb.d/migrations
    ports:
      - "5432:5432"
    networks:
      - pizzapachorra_network

  # Backend API con Node.js y Express
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      target: development
    container_name: pizzapachorra_backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://postgres:pizzapachorra2025@database:5432/pizzapachorra
      CORS_ORIGIN: http://localhost:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    depends_on:
      - database
    networks:
      - pizzapachorra_network

  # Frontend React con TypeScript
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: pizzapachorra_frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3001/api
      VITE_WS_URL: http://localhost:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:5173"
    depends_on:
      - backend
    networks:
      - pizzapachorra_network

volumes:
  postgres_data:
    driver: local

networks:
  pizzapachorra_network:
    driver: bridge