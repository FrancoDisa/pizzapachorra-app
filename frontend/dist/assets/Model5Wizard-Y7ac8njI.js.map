{"version":3,"file":"Model5Wizard-Y7ac8njI.js","sources":["../../src/components/pedidos/models/Model5Wizard.tsx"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react';\nimport { usePizzas, useExtras, useClientes, useCurrentOrder, useCurrentOrderItems, useAppStore } from '@/stores';\nimport type { Pizza, Extra, Cliente, CurrentOrderItem } from '@/types';\nimport PizzaCustomizationModal from '../PizzaCustomizationModal';\n\n// Demo data for customer search\nconst DEMO_CLIENTES: Cliente[] = [\n  { id: 1, nombre: 'Juan Carlos P√©rez', telefono: '099123456', direccion: 'Av. 18 de Julio 1234, Montevideo' },\n  { id: 2, nombre: 'Mar√≠a Fern√°ndez', telefono: '099234567', direccion: 'Bulevar Artigas 567, Montevideo' },\n  { id: 3, nombre: 'Carlos Rodr√≠guez', telefono: '099345678', direccion: 'Mercedes 890, Montevideo' },\n  { id: 4, nombre: 'Ana Mart√≠nez', telefono: '099456789', direccion: 'Constituyente 1234, Montevideo' },\n  { id: 5, nombre: 'Pedro Gonz√°lez', telefono: '099567890', direccion: 'Propios 567, Montevideo' },\n  { id: 6, nombre: 'Sof√≠a L√≥pez', telefono: '099678901', direccion: 'Colonia 890, Montevideo' },\n  { id: 7, nombre: 'Miguel Torres', telefono: '099789012', direccion: 'Pocitos 1234, Montevideo' },\n  { id: 8, nombre: 'Valentina Silva', telefono: '099890123', direccion: 'Cord√≥n 567, Montevideo' }\n];\n\ninterface WizardStep {\n  id: number;\n  title: string;\n  description: string;\n  icon: string;\n}\n\nexport default function Model5Wizard() {\n  const pizzas = usePizzas();\n  const extras = useExtras();\n  const clientes = useClientes();\n  const currentOrder = useCurrentOrder();\n  const items = useCurrentOrderItems();\n  const { addCustomizedItemToOrder, updateCustomizedItemInOrder, removeItemFromOrder, clearCurrentOrder, setOrderCustomer } = useAppStore();\n  \n  const [currentStep, setCurrentStep] = useState(1);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedPizzas, setSelectedPizzas] = useState<Pizza[]>([]);\n  const [selectedExtras, setSelectedExtras] = useState<Extra[]>([]);\n  const [customerSearch, setCustomerSearch] = useState('');\n  const [tempCustomer, setTempCustomer] = useState<Cliente | null>(null);\n  const [canAdvance, setCanAdvance] = useState(false);\n  const [showCustomizationModal, setShowCustomizationModal] = useState(false);\n  const [selectedPizzaForCustomization, setSelectedPizzaForCustomization] = useState<Pizza | null>(null);\n  const [editingItem, setEditingItem] = useState<CurrentOrderItem | null>(null);\n  const [showCustomerModal, setShowCustomerModal] = useState(false);\n  const [showCustomerDropdown, setShowCustomerDropdown] = useState(false);\n  const searchRef = useRef<HTMLInputElement>(null);\n  const customerRef = useRef<HTMLInputElement>(null);\n\n  const steps: WizardStep[] = [\n    { id: 1, title: 'Seleccionar Pizzas', description: 'Elige las pizzas para el pedido', icon: 'üçï' },\n    { id: 2, title: 'Configurar Extras', description: 'A√±ade extras y personaliza', icon: '‚ûï' },\n    { id: 3, title: 'Cliente y Confirmaci√≥n', description: 'Datos del cliente y finalizar', icon: '‚úÖ' }\n  ];\n\n  // Verificar si se puede avanzar\n  useEffect(() => {\n    switch (currentStep) {\n      case 1:\n        setCanAdvance(selectedPizzas.length > 0);\n        break;\n      case 2:\n        setCanAdvance(true); // Siempre se puede avanzar del paso 2\n        break;\n      case 3:\n        setCanAdvance(!!tempCustomer);\n        break;\n      default:\n        setCanAdvance(false);\n    }\n  }, [currentStep, selectedPizzas, tempCustomer]);\n\n  // Shortcuts de teclado\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (e.target instanceof HTMLInputElement) return;\n\n      switch (e.key.toLowerCase()) {\n        case 'f':\n          e.preventDefault();\n          if (currentStep === 1 || currentStep === 2) {\n            searchRef.current?.focus();\n          } else if (currentStep === 3) {\n            customerRef.current?.focus();\n          }\n          break;\n        case 'enter':\n          e.preventDefault();\n          if (canAdvance) {\n            handleNext();\n          }\n          break;\n        case 'backspace':\n          e.preventDefault();\n          if (currentStep > 1) {\n            handlePrevious();\n          }\n          break;\n        case 'escape':\n          e.preventDefault();\n          setSearchTerm('');\n          setCustomerSearch('');\n          break;\n        case '1':\n          e.preventDefault();\n          setCurrentStep(1);\n          break;\n        case '2':\n          e.preventDefault();\n          if (selectedPizzas.length > 0) setCurrentStep(2);\n          break;\n        case '3':\n          e.preventDefault();\n          if (selectedPizzas.length > 0) setCurrentStep(3);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    return () => document.removeEventListener('keydown', handleKeyPress);\n  }, [canAdvance, currentStep, selectedPizzas.length]);\n\n  // Funciones de navegaci√≥n\n  const handleNext = useCallback(() => {\n    if (currentStep < 3 && canAdvance) {\n      if (currentStep === 2) {\n        // Al pasar del paso 2 al 3, a√±adir productos al carrito\n        selectedPizzas.forEach(pizza => {\n          const orderItem: CurrentOrderItem = {\n            id: Date.now() + Math.random(),\n            pizza_id: pizza.id,\n            pizza_nombre: pizza.nombre,\n            precio_base: Math.round(parseFloat(pizza.precio_base.toString())),\n            cantidad: 1,\n            mitad_y_mitad: false,\n            extras: [],\n            ingredientes_removidos: [],\n            notas: '',\n            precio_total: Math.round(parseFloat(pizza.precio_base.toString()))\n          };\n          addCustomizedItemToOrder(orderItem);\n        });\n        selectedExtras.forEach(extra => {\n          console.log('Agregando extra:', extra);\n        });\n      }\n      setCurrentStep(currentStep + 1);\n      setSearchTerm('');\n    } else if (currentStep === 3 && canAdvance) {\n      // Finalizar pedido\n      handleFinishOrder();\n    }\n  }, [currentStep, canAdvance, selectedPizzas, selectedExtras, addItemToOrder]);\n\n  const handlePrevious = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n      setSearchTerm('');\n    }\n  };\n\n  const handleFinishOrder = () => {\n    if (tempCustomer) {\n      setOrderCustomer(tempCustomer);\n      // Reset wizard\n      setCurrentStep(1);\n      setSelectedPizzas([]);\n      setSelectedExtras([]);\n      setTempCustomer(null);\n      setCustomerSearch('');\n    }\n  };\n\n  // Funciones espec√≠ficas por paso\n  const handlePizzaSelect = (pizza: Pizza) => {\n    setSelectedPizzaForCustomization(pizza);\n    setShowCustomizationModal(true);\n  };\n\n  const handleCustomizationConfirm = (item: CurrentOrderItem) => {\n    if (editingItem) {\n      // Updating existing item\n      updateCustomizedItemInOrder(item);\n      setEditingItem(null);\n    } else {\n      // Adding new item\n      addCustomizedItemToOrder(item);\n      // Add to wizard selections\n      setSelectedPizzas(prev => {\n        const exists = prev.find(p => p.id === item.pizza_id);\n        if (!exists && item.pizza_id) {\n          const pizza = pizzas.find(p => p.id === item.pizza_id);\n          if (pizza) {\n            return [...prev, pizza];\n          }\n        }\n        return prev;\n      });\n    }\n    \n    setShowCustomizationModal(false);\n    setSelectedPizzaForCustomization(null);\n  };\n\n  const handleRemovePizza = (pizza: Pizza) => {\n    setSelectedPizzas(prev => prev.filter(p => p.id !== pizza.id));\n  };\n\n  const handleExtraSelect = (extra: Extra) => {\n    setSelectedExtras(prev => {\n      const exists = prev.find(e => e.id === extra.id);\n      if (exists) {\n        return prev.filter(e => e.id !== extra.id);\n      } else {\n        return [...prev, extra];\n      }\n    });\n  };\n\n  const handleCustomerSelect = (customer: Cliente) => {\n    setTempCustomer(customer);\n    setCustomerSearch('');\n    setShowCustomerDropdown(false);\n  };\n\n  const handleCreateCustomer = () => {\n    setShowCustomerModal(true);\n    setShowCustomerDropdown(false);\n  };\n\n  const handleCustomerModalConfirm = (customerData: { nombre: string; telefono: string; direccion?: string }) => {\n    const newCustomer: Cliente = {\n      id: Date.now(),\n      nombre: customerData.nombre,\n      telefono: customerData.telefono,\n      direccion: customerData.direccion,\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString()\n    };\n    setTempCustomer(newCustomer);\n    setShowCustomerModal(false);\n    setCustomerSearch('');\n  };\n\n  const searchCustomers = (query: string) => {\n    if (!query.trim()) return [];\n    return DEMO_CLIENTES.filter(cliente => \n      cliente.nombre?.toLowerCase().includes(query.toLowerCase()) ||\n      cliente.telefono.includes(query)\n    );\n  };\n\n  // Filtros por paso\n  const filteredPizzas = pizzas.filter(pizza =>\n    pizza.nombre.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    pizza.descripcion.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const filteredExtras = extras.filter(extra =>\n    extra.nombre.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    extra.categoria.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const filteredCustomers = searchCustomers(customerSearch).slice(0, 5);\n  const isPhoneSearch = /^[0-9+\\-\\s]+$/.test(customerSearch.trim());\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 p-6\">\n      \n      {/* Header del Wizard */}\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-white mb-2\">Wizard de Pedidos - 3 Pasos</h1>\n        <div className=\"text-sm text-gray-400 mb-6\">\n          Navegaci√≥n: <kbd className=\"bg-gray-700 px-1 rounded\">Enter</kbd>=Siguiente ‚Ä¢\n          <kbd className=\"bg-gray-700 px-1 rounded mx-1\">Backspace</kbd>=Anterior ‚Ä¢\n          <kbd className=\"bg-gray-700 px-1 rounded\">F</kbd>=Buscar ‚Ä¢\n          <kbd className=\"bg-gray-700 px-1 rounded mx-1\">1-3</kbd>=Ir a paso\n        </div>\n        \n        {/* Indicador de progreso */}\n        <div className=\"flex items-center justify-between mb-6\">\n          {steps.map((step, index) => (\n            <div key={step.id} className=\"flex items-center\">\n              {/* C√≠rculo del paso */}\n              <div className={`flex items-center justify-center w-12 h-12 rounded-full border-2 transition-all ${\n                currentStep === step.id \n                  ? 'bg-blue-600 border-blue-600 text-white' \n                  : currentStep > step.id\n                    ? 'bg-green-600 border-green-600 text-white'\n                    : 'border-gray-600 text-gray-400'\n              }`}>\n                {currentStep > step.id ? '‚úì' : step.icon}\n              </div>\n              \n              {/* Informaci√≥n del paso */}\n              <div className=\"ml-4\">\n                <div className={`font-medium ${\n                  currentStep === step.id ? 'text-blue-400' : \n                  currentStep > step.id ? 'text-green-400' : 'text-gray-400'\n                }`}>\n                  {step.title}\n                </div>\n                <div className=\"text-sm text-gray-500\">{step.description}</div>\n              </div>\n              \n              {/* L√≠nea conectora */}\n              {index < steps.length - 1 && (\n                <div className={`flex-1 h-0.5 mx-8 ${\n                  currentStep > step.id ? 'bg-green-600' : 'bg-gray-600'\n                }`} />\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Contenido del paso actual */}\n      <div className=\"bg-gray-800 rounded-lg p-6 mb-6\">\n        \n        {/* Paso 1: Seleccionar Pizzas */}\n        {currentStep === 1 && (\n          <div>\n            <h2 className=\"text-xl font-bold text-white mb-4\">\n              Paso 1: Seleccionar Pizzas ({selectedPizzas.length} seleccionadas)\n            </h2>\n            \n            {/* B√∫squeda */}\n            <div className=\"mb-6 relative\">\n              <input\n                ref={searchRef}\n                type=\"text\"\n                placeholder=\"Buscar pizzas... (F para focus)\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full px-4 py-3 pl-10 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n              <svg className=\"absolute left-3 top-3.5 h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n            </div>\n\n            {/* Pizzas seleccionadas */}\n            {selectedPizzas.length > 0 && (\n              <div className=\"mb-6 p-4 bg-green-900/30 border border-green-600/30 rounded-lg\">\n                <h3 className=\"text-green-400 font-medium mb-2\">Pizzas Seleccionadas:</h3>\n                <div className=\"flex flex-wrap gap-2\">\n                  {selectedPizzas.map(pizza => (\n                    <span\n                      key={pizza.id}\n                      className=\"px-3 py-1 bg-green-600 text-white rounded-full text-sm cursor-pointer hover:bg-green-700 transition-colors\"\n                      onClick={() => handleRemovePizza(pizza)}\n                    >\n                      {pizza.nombre} (${Math.round(parseFloat(pizza.precio_base.toString()))}) ‚úï\n                    </span>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            {/* Grid de pizzas */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {filteredPizzas.map(pizza => (\n                <div\n                  key={pizza.id}\n                  onClick={() => handlePizzaSelect(pizza)}\n                  className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${\n                    selectedPizzas.find(p => p.id === pizza.id)\n                      ? 'border-green-500 bg-green-900/30'\n                      : 'border-gray-600 bg-gray-700 hover:border-blue-500 hover:bg-gray-600'\n                  }`}\n                >\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <h3 className=\"font-medium text-white\">{pizza.nombre}</h3>\n                    <span className=\"text-green-400 font-bold\">${Math.round(parseFloat(pizza.precio_base.toString()))}</span>\n                  </div>\n                  <p className=\"text-gray-400 text-sm mb-3 line-clamp-2\">{pizza.descripcion}</p>\n                  \n                  {pizza.ingredientes.length > 0 && (\n                    <div className=\"flex flex-wrap gap-1\">\n                      {pizza.ingredientes.slice(0, 3).map((ingrediente, index) => (\n                        <span key={index} className=\"px-2 py-1 bg-gray-600 rounded text-xs text-gray-300\">\n                          {ingrediente}\n                        </span>\n                      ))}\n                      {pizza.ingredientes.length > 3 && (\n                        <span className=\"px-2 py-1 bg-gray-600 rounded text-xs text-gray-300\">\n                          +{pizza.ingredientes.length - 3}\n                        </span>\n                      )}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Paso 2: Configurar Extras */}\n        {currentStep === 2 && (\n          <div>\n            <h2 className=\"text-xl font-bold text-white mb-4\">\n              Paso 2: Configurar Extras ({selectedExtras.length} seleccionados)\n            </h2>\n            \n            {/* Resumen de pizzas */}\n            <div className=\"mb-6 p-4 bg-blue-900/30 border border-blue-600/30 rounded-lg\">\n              <h3 className=\"text-blue-400 font-medium mb-2\">Pizzas Seleccionadas:</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {selectedPizzas.map(pizza => (\n                  <span key={pizza.id} className=\"px-3 py-1 bg-blue-600 text-white rounded-full text-sm\">\n                    {pizza.nombre} (${Math.round(parseFloat(pizza.precio_base.toString()))})\n                  </span>\n                ))}\n              </div>\n            </div>\n            \n            {/* B√∫squeda de extras */}\n            <div className=\"mb-6 relative\">\n              <input\n                ref={searchRef}\n                type=\"text\"\n                placeholder=\"Buscar extras... (F para focus, opcional)\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full px-4 py-3 pl-10 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n              <svg className=\"absolute left-3 top-3.5 h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n            </div>\n\n            {/* Extras seleccionados */}\n            {selectedExtras.length > 0 && (\n              <div className=\"mb-6 p-4 bg-orange-900/30 border border-orange-600/30 rounded-lg\">\n                <h3 className=\"text-orange-400 font-medium mb-2\">Extras Seleccionados:</h3>\n                <div className=\"flex flex-wrap gap-2\">\n                  {selectedExtras.map(extra => (\n                    <span\n                      key={extra.id}\n                      className=\"px-3 py-1 bg-orange-600 text-white rounded-full text-sm cursor-pointer hover:bg-orange-700 transition-colors\"\n                      onClick={() => handleExtraSelect(extra)}\n                    >\n                      {extra.nombre} (+${Math.round(parseFloat(extra.precio.toString()))}) ‚úï\n                    </span>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            {/* Grid de extras */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n              {filteredExtras.map(extra => (\n                <div\n                  key={extra.id}\n                  onClick={() => handleExtraSelect(extra)}\n                  className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${\n                    selectedExtras.find(e => e.id === extra.id)\n                      ? 'border-orange-500 bg-orange-900/30'\n                      : 'border-gray-600 bg-gray-700 hover:border-blue-500 hover:bg-gray-600'\n                  }`}\n                >\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <h3 className=\"font-medium text-white\">{extra.nombre}</h3>\n                    <span className=\"text-green-400 font-bold\">+${Math.round(parseFloat(extra.precio.toString()))}</span>\n                  </div>\n                  <p className=\"text-gray-400 text-sm\">{extra.categoria}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Paso 3: Cliente y Confirmaci√≥n */}\n        {currentStep === 3 && (\n          <div>\n            <h2 className=\"text-xl font-bold text-white mb-4\">Paso 3: Cliente y Confirmaci√≥n</h2>\n            \n            {/* Resumen del pedido */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n              \n              {/* Selecci√≥n de cliente */}\n              <div>\n                <h3 className=\"text-lg font-medium text-white mb-4\">Informaci√≥n del Cliente</h3>\n                \n                {tempCustomer ? (\n                  <div className=\"p-4 bg-green-900/30 border border-green-600/30 rounded-lg\">\n                    <div className=\"flex justify-between items-start\">\n                      <div>\n                        <div className=\"text-green-400 font-medium\">{tempCustomer.nombre}</div>\n                        <div className=\"text-green-300 text-sm\">{tempCustomer.telefono}</div>\n                        {tempCustomer.direccion && (\n                          <div className=\"text-gray-400 text-xs mt-1\">{tempCustomer.direccion}</div>\n                        )}\n                      </div>\n                      <button\n                        onClick={() => {\n                          setTempCustomer(null);\n                          setCustomerSearch('');\n                        }}\n                        className=\"text-xs text-gray-400 hover:text-white bg-gray-700 px-2 py-1 rounded\"\n                      >\n                        Cambiar\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"relative\">\n                    <input\n                      ref={customerRef}\n                      type=\"text\"\n                      placeholder=\"Buscar cliente por tel√©fono o nombre...\"\n                      value={customerSearch}\n                      onChange={(e) => {\n                        setCustomerSearch(e.target.value);\n                        setShowCustomerDropdown(e.target.value.length > 0);\n                      }}\n                      onFocus={() => setShowCustomerDropdown(customerSearch.length > 0)}\n                      className=\"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    \n                    {/* Dropdown de clientes */}\n                    {showCustomerDropdown && customerSearch && (\n                      <div className=\"absolute top-full left-0 right-0 mt-1 bg-gray-800 border border-gray-600 rounded-lg shadow-lg z-10 max-h-60 overflow-y-auto\">\n                        {filteredCustomers.map(customer => (\n                          <button\n                            key={customer.id}\n                            onClick={() => handleCustomerSelect(customer)}\n                            className=\"w-full text-left px-4 py-3 hover:bg-gray-700 border-b border-gray-700 last:border-b-0 transition-colors\"\n                          >\n                            <div className=\"text-white font-medium\">{customer.nombre}</div>\n                            <div className=\"text-gray-400 text-sm\">{customer.telefono}</div>\n                            {customer.direccion && (\n                              <div className=\"text-gray-500 text-xs\">{customer.direccion}</div>\n                            )}\n                          </button>\n                        ))}\n                        <button\n                          onClick={handleCreateCustomer}\n                          className=\"w-full text-left px-4 py-3 bg-blue-700 hover:bg-blue-600 text-blue-200 transition-colors\"\n                        >\n                          <div className=\"font-medium\">+ Crear nuevo cliente</div>\n                          <div className=\"text-sm text-blue-300\">{customerSearch}</div>\n                        </button>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n              \n              {/* Resumen del pedido */}\n              <div>\n                <h3 className=\"text-lg font-medium text-white mb-4\">Resumen del Pedido</h3>\n                <div className=\"bg-gray-700 rounded-lg p-4 space-y-3\">\n                  \n                  {/* Items del pedido actual */}\n                  {items.length > 0 ? (\n                    <div>\n                      <h4 className=\"text-green-400 font-medium mb-2\">Items del Pedido ({items.length})</h4>\n                      <div className=\"space-y-2\">\n                        {items.map(item => (\n                          <div key={item.id} className=\"bg-gray-600 rounded p-3\">\n                            <div className=\"flex justify-between items-start mb-1\">\n                              <div className=\"flex-1\">\n                                <div className=\"flex items-center gap-2\">\n                                  <span className=\"text-white font-medium\">{item.pizza_nombre}</span>\n                                  <span className=\"text-gray-400 text-sm\">x{item.cantidad}</span>\n                                  <button\n                                    onClick={() => {\n                                      const pizza = pizzas.find(p => p.id === item.pizza_id);\n                                      if (pizza) {\n                                        setEditingItem(item);\n                                        setSelectedPizzaForCustomization(pizza);\n                                        setShowCustomizationModal(true);\n                                      }\n                                    }}\n                                    className=\"text-blue-400 hover:text-blue-300 text-xs bg-gray-700 px-2 py-1 rounded\"\n                                  >\n                                    Editar\n                                  </button>\n                                </div>\n                                \n                                {/* Mostrar extras */}\n                                {item.extras && item.extras.length > 0 && (\n                                  <div className=\"text-xs text-gray-300 mt-1\">\n                                    {item.extras.map((extra, index) => (\n                                      <span key={index} className=\"mr-2\">\n                                        ‚ûï {extra.nombre} (+${Math.round(parseFloat(extra.precio.toString()))})\n                                      </span>\n                                    ))}\n                                  </div>\n                                )}\n                                \n                                {/* Mostrar ingredientes removidos */}\n                                {item.ingredientes_removidos && item.ingredientes_removidos.length > 0 && (\n                                  <div className=\"text-xs text-gray-300 mt-1\">\n                                    {item.ingredientes_removidos.map((ingrediente, index) => (\n                                      <span key={index} className=\"mr-2\">\n                                        ‚ûñ Sin {ingrediente} (-$50)\n                                      </span>\n                                    ))}\n                                  </div>\n                                )}\n                                \n                                {/* Notas especiales */}\n                                {item.notas && (\n                                  <div className=\"text-xs text-yellow-400 mt-1\">\n                                    üìù {item.notas}\n                                  </div>\n                                )}\n                              </div>\n                              <div className=\"text-right\">\n                                <div className=\"text-green-400 font-bold\">${item.precio_total}</div>\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ) : (\n                    <>\n                      {/* Pizzas seleccionadas en wizard */}\n                      <div>\n                        <h4 className=\"text-green-400 font-medium mb-2\">Pizzas Seleccionadas ({selectedPizzas.length})</h4>\n                        {selectedPizzas.map(pizza => (\n                          <div key={pizza.id} className=\"flex justify-between text-sm\">\n                            <span className=\"text-white\">{pizza.nombre}</span>\n                            <span className=\"text-green-400\">${Math.round(parseFloat(pizza.precio_base.toString()))}</span>\n                          </div>\n                        ))}\n                      </div>\n                      \n                      {/* Extras */}\n                      {selectedExtras.length > 0 && (\n                        <div>\n                          <h4 className=\"text-orange-400 font-medium mb-2\">Extras ({selectedExtras.length})</h4>\n                          {selectedExtras.map(extra => (\n                            <div key={extra.id} className=\"flex justify-between text-sm\">\n                              <span className=\"text-white\">{extra.nombre}</span>\n                              <span className=\"text-green-400\">+${Math.round(parseFloat(extra.precio.toString()))}</span>\n                            </div>\n                          ))}\n                        </div>\n                      )}\n                    </>\n                  )}\n                  \n                  {/* Total */}\n                  <div className=\"border-t border-gray-600 pt-3\">\n                    <div className=\"flex justify-between text-lg font-bold\">\n                      <span className=\"text-white\">Total:</span>\n                      <span className=\"text-green-400\">\n                        ${items.length > 0 \n                          ? items.reduce((sum, item) => sum + item.precio_total, 0)\n                          : Math.round(\n                              selectedPizzas.reduce((sum, pizza) => sum + parseFloat(pizza.precio_base.toString()), 0) +\n                              selectedExtras.reduce((sum, extra) => sum + parseFloat(extra.precio.toString()), 0)\n                            )\n                        }\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Controles de navegaci√≥n */}\n      <div className=\"flex justify-between items-center\">\n        <button\n          onClick={handlePrevious}\n          disabled={currentStep === 1}\n          className=\"px-6 py-3 bg-gray-600 hover:bg-gray-500 disabled:bg-gray-800 disabled:cursor-not-allowed text-white rounded-lg transition-colors\"\n        >\n          ‚Üê Anterior (Backspace)\n        </button>\n        \n        <div className=\"text-center text-gray-400\">\n          Paso {currentStep} de {steps.length}\n        </div>\n        \n        <button\n          onClick={handleNext}\n          disabled={!canAdvance}\n          className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white rounded-lg transition-colors font-medium\"\n        >\n          {currentStep === 3 ? 'Finalizar Pedido' : 'Siguiente ‚Üí'} (Enter)\n        </button>\n      </div>\n      \n      {/* Ayuda contextual */}\n      <div className=\"mt-4 text-center text-sm text-gray-500\">\n        {currentStep === 1 && !canAdvance && \"Selecciona al menos una pizza para continuar\"}\n        {currentStep === 3 && !canAdvance && \"Selecciona o crea un cliente para finalizar\"}\n      </div>\n\n      {/* Pizza Customization Modal */}\n      {showCustomizationModal && selectedPizzaForCustomization && (\n        <PizzaCustomizationModal\n          pizza={selectedPizzaForCustomization}\n          editingItem={editingItem}\n          onConfirm={handleCustomizationConfirm}\n          onCancel={() => {\n            setShowCustomizationModal(false);\n            setSelectedPizzaForCustomization(null);\n            setEditingItem(null);\n          }}\n        />\n      )}\n\n      {/* Customer Creation Modal */}\n      {showCustomerModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-gray-800 rounded-lg p-6 w-full max-w-md mx-4\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Crear Nuevo Cliente</h3>\n            <form onSubmit={(e) => {\n              e.preventDefault();\n              const formData = new FormData(e.currentTarget);\n              handleCustomerModalConfirm({\n                nombre: formData.get('nombre') as string,\n                telefono: formData.get('telefono') as string,\n                direccion: formData.get('direccion') as string\n              });\n            }}>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">Nombre *</label>\n                  <input\n                    name=\"nombre\"\n                    type=\"text\"\n                    required\n                    defaultValue={isPhoneSearch ? '' : customerSearch}\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">Tel√©fono *</label>\n                  <input\n                    name=\"telefono\"\n                    type=\"tel\"\n                    required\n                    defaultValue={isPhoneSearch ? customerSearch : ''}\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">Direcci√≥n</label>\n                  <input\n                    name=\"direccion\"\n                    type=\"text\"\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowCustomerModal(false)}\n                  className=\"px-4 py-2 text-gray-400 hover:text-white transition-colors\"\n                >\n                  Cancelar\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded transition-colors\"\n                >\n                  Crear Cliente\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":["DEMO_CLIENTES","Model5Wizard","pizzas","usePizzas","extras","useExtras","useClientes","useCurrentOrder","items","useCurrentOrderItems","addCustomizedItemToOrder","updateCustomizedItemInOrder","removeItemFromOrder","clearCurrentOrder","setOrderCustomer","useAppStore","currentStep","setCurrentStep","useState","searchTerm","setSearchTerm","selectedPizzas","setSelectedPizzas","selectedExtras","setSelectedExtras","customerSearch","setCustomerSearch","tempCustomer","setTempCustomer","canAdvance","setCanAdvance","showCustomizationModal","setShowCustomizationModal","selectedPizzaForCustomization","setSelectedPizzaForCustomization","editingItem","setEditingItem","showCustomerModal","setShowCustomerModal","showCustomerDropdown","setShowCustomerDropdown","searchRef","useRef","customerRef","steps","useEffect","handleKeyPress","e","_a","_b","handleNext","handlePrevious","useCallback","pizza","orderItem","extra","handleFinishOrder","handlePizzaSelect","handleCustomizationConfirm","item","prev","p","handleRemovePizza","handleExtraSelect","handleCustomerSelect","customer","handleCreateCustomer","handleCustomerModalConfirm","customerData","newCustomer","searchCustomers","query","cliente","filteredPizzas","filteredExtras","filteredCustomers","isPhoneSearch","jsxs","jsx","step","index","ingrediente","Fragment","sum","PizzaCustomizationModal","formData"],"mappings":"0JAMA,MAAMA,GAA2B,CAC/B,CAAE,GAAI,EAAG,OAAQ,oBAAqB,SAAU,YAAa,UAAW,kCAAA,EACxE,CAAE,GAAI,EAAG,OAAQ,kBAAmB,SAAU,YAAa,UAAW,iCAAA,EACtE,CAAE,GAAI,EAAG,OAAQ,mBAAoB,SAAU,YAAa,UAAW,0BAAA,EACvE,CAAE,GAAI,EAAG,OAAQ,eAAgB,SAAU,YAAa,UAAW,gCAAA,EACnE,CAAE,GAAI,EAAG,OAAQ,iBAAkB,SAAU,YAAa,UAAW,yBAAA,EACrE,CAAE,GAAI,EAAG,OAAQ,cAAe,SAAU,YAAa,UAAW,yBAAA,EAClE,CAAE,GAAI,EAAG,OAAQ,gBAAiB,SAAU,YAAa,UAAW,0BAAA,EACpE,CAAE,GAAI,EAAG,OAAQ,kBAAmB,SAAU,YAAa,UAAW,wBAAA,CACxE,EASA,SAAwBC,IAAe,CACrC,MAAMC,EAASC,GAAA,EACTC,EAASC,GAAA,EACEC,GAAA,EACIC,GAAA,EACrB,MAAMC,EAAQC,GAAA,EACR,CAAE,yBAAAC,EAA0B,4BAAAC,EAA6B,oBAAAC,GAAqB,kBAAAC,GAAmB,iBAAAC,CAAA,EAAqBC,GAAA,EAEtH,CAACC,EAAaC,CAAc,EAAIC,EAAAA,SAAS,CAAC,EAC1C,CAACC,EAAYC,CAAa,EAAIF,EAAAA,SAAS,EAAE,EACzC,CAACG,EAAgBC,CAAiB,EAAIJ,EAAAA,SAAkB,CAAA,CAAE,EAC1D,CAACK,EAAgBC,CAAiB,EAAIN,EAAAA,SAAkB,CAAA,CAAE,EAC1D,CAACO,EAAgBC,CAAiB,EAAIR,EAAAA,SAAS,EAAE,EACjD,CAACS,EAAcC,CAAe,EAAIV,EAAAA,SAAyB,IAAI,EAC/D,CAACW,EAAYC,CAAa,EAAIZ,EAAAA,SAAS,EAAK,EAC5C,CAACa,EAAwBC,CAAyB,EAAId,EAAAA,SAAS,EAAK,EACpE,CAACe,EAA+BC,CAAgC,EAAIhB,EAAAA,SAAuB,IAAI,EAC/F,CAACiB,EAAaC,CAAc,EAAIlB,EAAAA,SAAkC,IAAI,EACtE,CAACmB,EAAmBC,CAAoB,EAAIpB,EAAAA,SAAS,EAAK,EAC1D,CAACqB,EAAsBC,CAAuB,EAAItB,EAAAA,SAAS,EAAK,EAChEuB,EAAYC,EAAAA,OAAyB,IAAI,EACzCC,EAAcD,EAAAA,OAAyB,IAAI,EAE3CE,EAAsB,CAC1B,CAAE,GAAI,EAAG,MAAO,qBAAsB,YAAa,kCAAmC,KAAM,IAAA,EAC5F,CAAE,GAAI,EAAG,MAAO,oBAAqB,YAAa,6BAA8B,KAAM,GAAA,EACtF,CAAE,GAAI,EAAG,MAAO,yBAA0B,YAAa,gCAAiC,KAAM,GAAA,CAAI,EAIpGC,EAAAA,UAAU,IAAM,CACd,OAAQ7B,EAAA,CACN,IAAK,GACHc,EAAcT,EAAe,OAAS,CAAC,EACvC,MACF,IAAK,GACHS,EAAc,EAAI,EAClB,MACF,IAAK,GACHA,EAAc,CAAC,CAACH,CAAY,EAC5B,MACF,QACEG,EAAc,EAAK,CAAA,CACvB,EACC,CAACd,EAAaK,EAAgBM,CAAY,CAAC,EAG9CkB,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAkBC,GAAqB,SAC3C,GAAI,EAAAA,EAAE,kBAAkB,kBAExB,OAAQA,EAAE,IAAI,YAAA,EAAY,CACxB,IAAK,IACHA,EAAE,eAAA,EACE/B,IAAgB,GAAKA,IAAgB,GACvCgC,EAAAP,EAAU,UAAV,MAAAO,EAAmB,QACVhC,IAAgB,KACzBiC,EAAAN,EAAY,UAAZ,MAAAM,EAAqB,SAEvB,MACF,IAAK,QACHF,EAAE,eAAA,EACElB,GACFqB,EAAA,EAEF,MACF,IAAK,YACHH,EAAE,eAAA,EACE/B,EAAc,GAChBmC,EAAA,EAEF,MACF,IAAK,SACHJ,EAAE,eAAA,EACF3B,EAAc,EAAE,EAChBM,EAAkB,EAAE,EACpB,MACF,IAAK,IACHqB,EAAE,eAAA,EACF9B,EAAe,CAAC,EAChB,MACF,IAAK,IACH8B,EAAE,eAAA,EACE1B,EAAe,OAAS,GAAGJ,EAAe,CAAC,EAC/C,MACF,IAAK,IACH8B,EAAE,eAAA,EACE1B,EAAe,OAAS,GAAGJ,EAAe,CAAC,EAC/C,KAAA,CACJ,EAGF,gBAAS,iBAAiB,UAAW6B,CAAc,EAC5C,IAAM,SAAS,oBAAoB,UAAWA,CAAc,CAAA,EAClE,CAACjB,EAAYb,EAAaK,EAAe,MAAM,CAAC,EAGnD,MAAM6B,EAAaE,EAAAA,YAAY,IAAM,CAC/BpC,EAAc,GAAKa,GACjBb,IAAgB,IAElBK,EAAe,QAAQgC,GAAS,CAC9B,MAAMC,EAA8B,CAClC,GAAI,KAAK,MAAQ,KAAK,OAAA,EACtB,SAAUD,EAAM,GAChB,aAAcA,EAAM,OACpB,YAAa,KAAK,MAAM,WAAWA,EAAM,YAAY,SAAA,CAAU,CAAC,EAChE,SAAU,EACV,cAAe,GACf,OAAQ,CAAA,EACR,uBAAwB,CAAA,EACxB,MAAO,GACP,aAAc,KAAK,MAAM,WAAWA,EAAM,YAAY,UAAU,CAAC,CAAA,EAEnE3C,EAAyB4C,CAAS,CAAA,CACnC,EACD/B,EAAe,QAAQgC,GAAS,CAC9B,QAAQ,IAAI,mBAAoBA,CAAK,CAAA,CACtC,GAEHtC,EAAeD,EAAc,CAAC,EAC9BI,EAAc,EAAE,GACPJ,IAAgB,GAAKa,GAE9B2B,EAAA,CACF,EACC,CAACxC,EAAaa,EAAYR,EAAgBE,EAAgB,cAAc,CAAC,EAEtE4B,EAAiB,IAAM,CACvBnC,EAAc,IAChBC,EAAeD,EAAc,CAAC,EAC9BI,EAAc,EAAE,EAClB,EAGIoC,EAAoB,IAAM,CAC1B7B,IACFb,EAAiBa,CAAY,EAE7BV,EAAe,CAAC,EAChBK,EAAkB,CAAA,CAAE,EACpBE,EAAkB,CAAA,CAAE,EACpBI,EAAgB,IAAI,EACpBF,EAAkB,EAAE,EACtB,EAII+B,EAAqBJ,GAAiB,CAC1CnB,EAAiCmB,CAAK,EACtCrB,EAA0B,EAAI,CAAA,EAG1B0B,EAA8BC,GAA2B,CACzDxB,GAEFxB,EAA4BgD,CAAI,EAChCvB,EAAe,IAAI,IAGnB1B,EAAyBiD,CAAI,EAE7BrC,EAAkBsC,GAAQ,CAExB,GAAI,CADWA,EAAK,QAAUC,EAAE,KAAOF,EAAK,QAAQ,GACrCA,EAAK,SAAU,CAC5B,MAAMN,EAAQnD,EAAO,SAAU2D,GAAE,KAAOF,EAAK,QAAQ,EACrD,GAAIN,EACF,MAAO,CAAC,GAAGO,EAAMP,CAAK,CACxB,CAEF,OAAOO,CAAA,CACR,GAGH5B,EAA0B,EAAK,EAC/BE,EAAiC,IAAI,CAAA,EAGjC4B,EAAqBT,GAAiB,CAC1C/B,EAAkBsC,GAAQA,EAAK,OAAOC,GAAKA,EAAE,KAAOR,EAAM,EAAE,CAAC,CAAA,EAGzDU,EAAqBR,GAAiB,CAC1C/B,EAAkBoC,GACDA,EAAK,QAAUb,EAAE,KAAOQ,EAAM,EAAE,EAEtCK,EAAK,OAAOb,GAAKA,EAAE,KAAOQ,EAAM,EAAE,EAElC,CAAC,GAAGK,EAAML,CAAK,CAEzB,CAAA,EAGGS,EAAwBC,GAAsB,CAClDrC,EAAgBqC,CAAQ,EACxBvC,EAAkB,EAAE,EACpBc,EAAwB,EAAK,CAAA,EAGzB0B,EAAuB,IAAM,CACjC5B,EAAqB,EAAI,EACzBE,EAAwB,EAAK,CAAA,EAGzB2B,EAA8BC,GAA2E,CAC7G,MAAMC,EAAuB,CAC3B,GAAI,KAAK,IAAA,EACT,OAAQD,EAAa,OACrB,SAAUA,EAAa,SACvB,UAAWA,EAAa,UACxB,WAAY,IAAI,KAAA,EAAO,YAAA,EACvB,WAAY,IAAI,KAAA,EAAO,YAAA,CAAY,EAErCxC,EAAgByC,CAAW,EAC3B/B,EAAqB,EAAK,EAC1BZ,EAAkB,EAAE,CAAA,EAGhB4C,EAAmBC,GAClBA,EAAM,KAAA,EACJvE,GAAc,OAAOwE,GAAA,OAC1B,QAAAxB,EAAAwB,EAAQ,SAAR,YAAAxB,EAAgB,cAAc,SAASuB,EAAM,YAAA,KAC7CC,EAAQ,SAAS,SAASD,CAAK,EAAA,EAHP,CAAA,EAQtBE,EAAiBvE,EAAO,UAC5BmD,EAAM,OAAO,YAAA,EAAc,SAASlC,EAAW,YAAA,CAAa,GAC5DkC,EAAM,YAAY,YAAA,EAAc,SAASlC,EAAW,aAAa,CAAA,EAG7DuD,EAAiBtE,EAAO,UAC5BmD,EAAM,OAAO,YAAA,EAAc,SAASpC,EAAW,YAAA,CAAa,GAC5DoC,EAAM,UAAU,YAAA,EAAc,SAASpC,EAAW,aAAa,CAAA,EAG3DwD,EAAoBL,EAAgB7C,CAAc,EAAE,MAAM,EAAG,CAAC,EAC9DmD,EAAgB,gBAAgB,KAAKnD,EAAe,MAAM,EAEhE,OACEoD,EAAAA,KAAC,MAAA,CAAI,UAAU,+BAGb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,qCAAqC,SAAA,8BAA2B,EAC9ED,EAAAA,KAAC,MAAA,CAAI,UAAU,6BAA6B,SAAA,CAAA,eAC9BC,EAAAA,IAAC,MAAA,CAAI,UAAU,2BAA2B,SAAA,QAAK,EAAM,eACjEA,EAAAA,IAAC,MAAA,CAAI,UAAU,gCAAgC,SAAA,YAAS,EAAM,cAC9DA,EAAAA,IAAC,MAAA,CAAI,UAAU,2BAA2B,SAAA,IAAC,EAAM,YACjDA,EAAAA,IAAC,MAAA,CAAI,UAAU,gCAAgC,SAAA,MAAG,EAAM,YAAA,EAC1D,EAGAA,EAAAA,IAAC,MAAA,CAAI,UAAU,yCACZ,SAAAlC,EAAM,IAAI,CAACmC,EAAMC,IAChBH,EAAAA,KAAC,MAAA,CAAkB,UAAU,oBAE3B,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAW,mFACd9D,IAAgB+D,EAAK,GACjB,yCACA/D,EAAc+D,EAAK,GACjB,2CACA,+BACR,GACG,SAAA/D,EAAc+D,EAAK,GAAK,IAAMA,EAAK,KACtC,EAGAF,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAC,MAAC,MAAA,CAAI,UAAW,eACd9D,IAAgB+D,EAAK,GAAK,gBAC1B/D,EAAc+D,EAAK,GAAK,iBAAmB,eAC7C,GACG,WAAK,MACR,EACAD,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAyB,WAAK,WAAA,CAAY,CAAA,EAC3D,EAGCE,EAAQpC,EAAM,OAAS,GACtBkC,EAAAA,IAAC,MAAA,CAAI,UAAW,qBACd9D,EAAc+D,EAAK,GAAK,eAAiB,aAC3C,EAAA,CAAI,CAAA,GA3BEA,EAAK,EA6Bf,CACD,CAAA,CACH,CAAA,EACF,EAGAF,EAAAA,KAAC,MAAA,CAAI,UAAU,kCAGZ,SAAA,CAAA7D,IAAgB,UACd,MAAA,CACC,SAAA,CAAA6D,EAAAA,KAAC,KAAA,CAAG,UAAU,oCAAoC,SAAA,CAAA,+BACnBxD,EAAe,OAAO,iBAAA,EACrD,EAGAwD,EAAAA,KAAC,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,IAAKrC,EACL,KAAK,OACL,YAAY,kCACZ,MAAOtB,EACP,SAAW4B,GAAM3B,EAAc2B,EAAE,OAAO,KAAK,EAC7C,UAAU,qIAAA,CAAA,EAEZ+B,EAAAA,IAAC,OAAI,UAAU,gDAAgD,KAAK,OAAO,OAAO,eAAe,QAAQ,YACvG,eAAC,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,8CAA8C,CAAA,CACrH,CAAA,EACF,EAGCzD,EAAe,OAAS,GACvBwD,EAAAA,KAAC,MAAA,CAAI,UAAU,iEACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,kCAAkC,SAAA,wBAAqB,QACpE,MAAA,CAAI,UAAU,uBACZ,SAAAzD,EAAe,IAAIgC,GAClBwB,EAAAA,KAAC,OAAA,CAEC,UAAU,6GACV,QAAS,IAAMf,EAAkBT,CAAK,EAErC,SAAA,CAAAA,EAAM,OAAO,MAAI,KAAK,MAAM,WAAWA,EAAM,YAAY,SAAA,CAAU,CAAC,EAAE,KAAA,CAAA,EAJlEA,EAAM,EAAA,CAMd,CAAA,CACH,CAAA,EACF,QAID,MAAA,CAAI,UAAU,uDACZ,SAAAoB,EAAe,IAAIpB,GAClBwB,EAAAA,KAAC,MAAA,CAEC,QAAS,IAAMpB,EAAkBJ,CAAK,EACtC,UAAW,yDACThC,EAAe,KAAKwC,GAAKA,EAAE,KAAOR,EAAM,EAAE,EACtC,mCACA,qEACN,GAEA,SAAA,CAAAwB,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,yBAA0B,SAAAzB,EAAM,OAAO,EACrDwB,EAAAA,KAAC,OAAA,CAAK,UAAU,2BAA2B,SAAA,CAAA,IAAE,KAAK,MAAM,WAAWxB,EAAM,YAAY,SAAA,CAAU,CAAC,CAAA,CAAA,CAAE,CAAA,EACpG,EACAyB,EAAAA,IAAC,IAAA,CAAE,UAAU,0CAA2C,WAAM,YAAY,EAEzEzB,EAAM,aAAa,OAAS,GAC3BwB,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACZ,SAAA,CAAAxB,EAAM,aAAa,MAAM,EAAG,CAAC,EAAE,IAAI,CAAC4B,EAAaD,UAC/C,OAAA,CAAiB,UAAU,sDACzB,SAAAC,CAAA,EADQD,CAEX,CACD,EACA3B,EAAM,aAAa,OAAS,GAC3BwB,EAAAA,KAAC,OAAA,CAAK,UAAU,sDAAsD,SAAA,CAAA,IAClExB,EAAM,aAAa,OAAS,CAAA,CAAA,CAChC,CAAA,CAAA,CAEJ,CAAA,CAAA,EA1BGA,EAAM,EAAA,CA6Bd,CAAA,CACH,CAAA,EACF,EAIDrC,IAAgB,GACf6D,EAAAA,KAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,oCAAoC,SAAA,CAAA,8BACpBtD,EAAe,OAAO,iBAAA,EACpD,EAGAsD,EAAAA,KAAC,MAAA,CAAI,UAAU,+DACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,wBAAqB,EACpEA,EAAAA,IAAC,MAAA,CAAI,UAAU,uBACZ,SAAAzD,EAAe,IAAIgC,GAClBwB,EAAAA,KAAC,OAAA,CAAoB,UAAU,wDAC5B,SAAA,CAAAxB,EAAM,OAAO,MAAI,KAAK,MAAM,WAAWA,EAAM,YAAY,SAAA,CAAU,CAAC,EAAE,GAAA,GAD9DA,EAAM,EAEjB,CACD,CAAA,CACH,CAAA,EACF,EAGAwB,EAAAA,KAAC,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,IAAKrC,EACL,KAAK,OACL,YAAY,4CACZ,MAAOtB,EACP,SAAW4B,GAAM3B,EAAc2B,EAAE,OAAO,KAAK,EAC7C,UAAU,qIAAA,CAAA,EAEZ+B,EAAAA,IAAC,OAAI,UAAU,gDAAgD,KAAK,OAAO,OAAO,eAAe,QAAQ,YACvG,eAAC,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,8CAA8C,CAAA,CACrH,CAAA,EACF,EAGCvD,EAAe,OAAS,GACvBsD,EAAAA,KAAC,MAAA,CAAI,UAAU,mEACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,mCAAmC,SAAA,wBAAqB,QACrE,MAAA,CAAI,UAAU,uBACZ,SAAAvD,EAAe,IAAIgC,GAClBsB,EAAAA,KAAC,OAAA,CAEC,UAAU,+GACV,QAAS,IAAMd,EAAkBR,CAAK,EAErC,SAAA,CAAAA,EAAM,OAAO,OAAK,KAAK,MAAM,WAAWA,EAAM,OAAO,SAAA,CAAU,CAAC,EAAE,KAAA,CAAA,EAJ9DA,EAAM,EAAA,CAMd,CAAA,CACH,CAAA,EACF,QAID,MAAA,CAAI,UAAU,uDACZ,SAAAmB,EAAe,IAAInB,GAClBsB,EAAAA,KAAC,MAAA,CAEC,QAAS,IAAMd,EAAkBR,CAAK,EACtC,UAAW,yDACThC,EAAe,KAAKwB,GAAKA,EAAE,KAAOQ,EAAM,EAAE,EACtC,qCACA,qEACN,GAEA,SAAA,CAAAsB,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,yBAA0B,SAAAvB,EAAM,OAAO,EACrDsB,EAAAA,KAAC,OAAA,CAAK,UAAU,2BAA2B,SAAA,CAAA,KAAG,KAAK,MAAM,WAAWtB,EAAM,OAAO,SAAA,CAAU,CAAC,CAAA,CAAA,CAAE,CAAA,EAChG,EACAuB,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAyB,WAAM,SAAA,CAAU,CAAA,CAAA,EAZjDvB,EAAM,EAAA,CAcd,CAAA,CACH,CAAA,EACF,EAIDvC,IAAgB,GACf6D,EAAAA,KAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,oCAAoC,SAAA,iCAA8B,EAGhFD,EAAAA,KAAC,MAAA,CAAI,UAAU,6CAGb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,sCAAsC,SAAA,0BAAuB,EAE1EnD,QACE,MAAA,CAAI,UAAU,4DACb,SAAAkD,EAAAA,KAAC,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,6BAA8B,SAAAnD,EAAa,OAAO,EACjEmD,EAAAA,IAAC,MAAA,CAAI,UAAU,yBAA0B,WAAa,SAAS,EAC9DnD,EAAa,WACZmD,EAAAA,IAAC,OAAI,UAAU,6BAA8B,WAAa,SAAA,CAAU,CAAA,EAExE,EACAA,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACblD,EAAgB,IAAI,EACpBF,EAAkB,EAAE,CAAA,EAEtB,UAAU,uEACX,SAAA,SAAA,CAAA,CAED,CAAA,CACF,CAAA,CACF,EAEAmD,EAAAA,KAAC,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,IAAKnC,EACL,KAAK,OACL,YAAY,0CACZ,MAAOlB,EACP,SAAWsB,GAAM,CACfrB,EAAkBqB,EAAE,OAAO,KAAK,EAChCP,EAAwBO,EAAE,OAAO,MAAM,OAAS,CAAC,CAAA,EAEnD,QAAS,IAAMP,EAAwBf,EAAe,OAAS,CAAC,EAChE,UAAU,+HAAA,CAAA,EAIXc,GAAwBd,GACvBoD,OAAC,MAAA,CAAI,UAAU,8HACZ,SAAA,CAAAF,EAAkB,IAAIV,GACrBY,EAAAA,KAAC,SAAA,CAEC,QAAS,IAAMb,EAAqBC,CAAQ,EAC5C,UAAU,0GAEV,SAAA,CAAAa,EAAAA,IAAC,MAAA,CAAI,UAAU,yBAA0B,SAAAb,EAAS,OAAO,EACzDa,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAyB,WAAS,SAAS,EACzDb,EAAS,WACRa,EAAAA,IAAC,OAAI,UAAU,wBAAyB,WAAS,SAAA,CAAU,CAAA,CAAA,EAPxDb,EAAS,EAAA,CAUjB,EACDY,EAAAA,KAAC,SAAA,CACC,QAASX,EACT,UAAU,2FAEV,SAAA,CAAAY,EAAAA,IAAC,MAAA,CAAI,UAAU,cAAc,SAAA,wBAAqB,EAClDA,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAyB,SAAArD,CAAA,CAAe,CAAA,CAAA,CAAA,CACzD,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,EAEJ,SAGC,MAAA,CACC,SAAA,CAAAqD,EAAAA,IAAC,KAAA,CAAG,UAAU,sCAAsC,SAAA,qBAAkB,EACtED,EAAAA,KAAC,MAAA,CAAI,UAAU,uCAGZ,SAAA,CAAArE,EAAM,OAAS,EACdqE,EAAAA,KAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,kCAAkC,SAAA,CAAA,qBAAmBrE,EAAM,OAAO,GAAA,EAAC,EACjFsE,MAAC,MAAA,CAAI,UAAU,YACZ,WAAM,IAAInB,GACTmB,EAAAA,IAAC,MAAA,CAAkB,UAAU,0BAC3B,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAK,UAAU,yBAA0B,SAAAnB,EAAK,aAAa,EAC5DkB,EAAAA,KAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,CAAA,IAAElB,EAAK,QAAA,EAAS,EACxDmB,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACb,MAAMzB,EAAQnD,EAAO,QAAU2D,EAAE,KAAOF,EAAK,QAAQ,EACjDN,IACFjB,EAAeuB,CAAI,EACnBzB,EAAiCmB,CAAK,EACtCrB,EAA0B,EAAI,EAChC,EAEF,UAAU,0EACX,SAAA,QAAA,CAAA,CAED,EACF,EAGC2B,EAAK,QAAUA,EAAK,OAAO,OAAS,SAClC,MAAA,CAAI,UAAU,6BACZ,SAAAA,EAAK,OAAO,IAAI,CAACJ,EAAOyB,IACvBH,OAAC,OAAA,CAAiB,UAAU,OAAO,SAAA,CAAA,KAC9BtB,EAAM,OAAO,OAAK,KAAK,MAAM,WAAWA,EAAM,OAAO,SAAA,CAAU,CAAC,EAAE,GAAA,GAD5DyB,CAEX,CACD,EACH,EAIDrB,EAAK,wBAA0BA,EAAK,uBAAuB,OAAS,SAClE,MAAA,CAAI,UAAU,6BACZ,SAAAA,EAAK,uBAAuB,IAAI,CAACsB,EAAaD,IAC7CH,OAAC,OAAA,CAAiB,UAAU,OAAO,SAAA,CAAA,SAC1BI,EAAY,SAAA,GADVD,CAEX,CACD,EACH,EAIDrB,EAAK,OACJkB,OAAC,MAAA,CAAI,UAAU,+BAA+B,SAAA,CAAA,MACxClB,EAAK,KAAA,CAAA,CACX,CAAA,EAEJ,QACC,MAAA,CAAI,UAAU,aACb,SAAAkB,EAAAA,KAAC,MAAA,CAAI,UAAU,2BAA2B,SAAA,CAAA,IAAElB,EAAK,YAAA,CAAA,CAAa,CAAA,CAChE,CAAA,CAAA,CACF,CAAA,EArDQA,EAAK,EAsDf,CACD,CAAA,CACH,CAAA,CAAA,CACF,EAEAkB,EAAAA,KAAAK,EAAAA,SAAA,CAEE,SAAA,CAAAL,OAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,kCAAkC,SAAA,CAAA,yBAAuBxD,EAAe,OAAO,GAAA,EAAC,EAC7FA,EAAe,IAAIgC,GAClBwB,EAAAA,KAAC,MAAA,CAAmB,UAAU,+BAC5B,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAK,UAAU,aAAc,SAAAzB,EAAM,OAAO,EAC3CwB,EAAAA,KAAC,OAAA,CAAK,UAAU,iBAAiB,SAAA,CAAA,IAAE,KAAK,MAAM,WAAWxB,EAAM,YAAY,SAAA,CAAU,CAAC,CAAA,CAAA,CAAE,CAAA,CAAA,EAFhFA,EAAM,EAGhB,CACD,CAAA,EACH,EAGC9B,EAAe,OAAS,GACvBsD,EAAAA,KAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,mCAAmC,SAAA,CAAA,WAAStD,EAAe,OAAO,GAAA,EAAC,EAChFA,EAAe,IAAIgC,GAClBsB,EAAAA,KAAC,MAAA,CAAmB,UAAU,+BAC5B,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAK,UAAU,aAAc,SAAAvB,EAAM,OAAO,EAC3CsB,EAAAA,KAAC,OAAA,CAAK,UAAU,iBAAiB,SAAA,CAAA,KAAG,KAAK,MAAM,WAAWtB,EAAM,OAAO,SAAA,CAAU,CAAC,CAAA,CAAA,CAAE,CAAA,CAAA,EAF5EA,EAAM,EAGhB,CACD,CAAA,CAAA,CACH,CAAA,EAEJ,QAID,MAAA,CAAI,UAAU,gCACb,SAAAsB,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAK,UAAU,aAAa,SAAA,SAAM,EACnCD,EAAAA,KAAC,OAAA,CAAK,UAAU,iBAAiB,SAAA,CAAA,IAC7BrE,EAAM,OAAS,EACbA,EAAM,OAAO,CAAC2E,EAAKxB,IAASwB,EAAMxB,EAAK,aAAc,CAAC,EACtD,KAAK,MACHtC,EAAe,OAAO,CAAC8D,EAAK9B,IAAU8B,EAAM,WAAW9B,EAAM,YAAY,SAAA,CAAU,EAAG,CAAC,EACvF9B,EAAe,OAAO,CAAC4D,EAAK5B,IAAU4B,EAAM,WAAW5B,EAAM,OAAO,SAAA,CAAU,EAAG,CAAC,CAAA,CACpF,CAAA,CAEN,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EAEJ,EAGAsB,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACC,QAAS3B,EACT,SAAUnC,IAAgB,EAC1B,UAAU,mIACX,SAAA,wBAAA,CAAA,EAID6D,EAAAA,KAAC,MAAA,CAAI,UAAU,4BAA4B,SAAA,CAAA,QACnC7D,EAAY,OAAK4B,EAAM,MAAA,EAC/B,EAEAiC,EAAAA,KAAC,SAAA,CACC,QAAS3B,EACT,SAAU,CAACrB,EACX,UAAU,+IAET,SAAA,CAAAb,IAAgB,EAAI,mBAAqB,cAAc,UAAA,CAAA,CAAA,CAC1D,EACF,EAGA6D,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACZ,SAAA,CAAA7D,IAAgB,GAAK,CAACa,GAAc,+CACpCb,IAAgB,GAAK,CAACa,GAAc,6CAAA,EACvC,EAGCE,GAA0BE,GACzB6C,EAAAA,IAACM,GAAA,CACC,MAAOnD,EACP,YAAAE,EACA,UAAWuB,EACX,SAAU,IAAM,CACd1B,EAA0B,EAAK,EAC/BE,EAAiC,IAAI,EACrCE,EAAe,IAAI,CAAA,CACrB,CAAA,EAKHC,SACE,MAAA,CAAI,UAAU,6EACb,SAAAwC,EAAAA,KAAC,MAAA,CAAI,UAAU,kDACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,oCAAoC,SAAA,sBAAmB,EACrED,EAAAA,KAAC,OAAA,CAAK,SAAW9B,GAAM,CACrBA,EAAE,eAAA,EACF,MAAMsC,EAAW,IAAI,SAAStC,EAAE,aAAa,EAC7CoB,EAA2B,CACzB,OAAQkB,EAAS,IAAI,QAAQ,EAC7B,SAAUA,EAAS,IAAI,UAAU,EACjC,UAAWA,EAAS,IAAI,WAAW,CAAA,CACpC,CAAA,EAED,SAAA,CAAAR,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,WAAQ,EACxEA,EAAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,OACL,SAAQ,GACR,aAAcF,EAAgB,GAAKnD,EACnC,UAAU,4HAAA,CAAA,CACZ,EACF,SACC,MAAA,CACC,SAAA,CAAAqD,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,aAAU,EAC1EA,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,KAAK,MACL,SAAQ,GACR,aAAcF,EAAgBnD,EAAiB,GAC/C,UAAU,4HAAA,CAAA,CACZ,EACF,SACC,MAAA,CACC,SAAA,CAAAqD,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,YAAS,EACzEA,EAAAA,IAAC,QAAA,CACC,KAAK,YACL,KAAK,OACL,UAAU,4HAAA,CAAA,CACZ,CAAA,CACF,CAAA,EACF,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,kCACb,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMxC,EAAqB,EAAK,EACzC,UAAU,6DACX,SAAA,UAAA,CAAA,EAGDwC,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,+EACX,SAAA,eAAA,CAAA,CAED,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EAEJ,CAEJ"}